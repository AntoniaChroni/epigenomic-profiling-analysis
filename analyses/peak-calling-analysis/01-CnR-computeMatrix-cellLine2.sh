#!/bin/bash

set -e
set -o pipefail

########################################################################
# Load modules
module load deeptools/3.5.4 
module load bedtools/2.30.0
module load bedops/2.4.41
module load tabix/0.2.6
module load htslib/1.16

########################################################################
# Set up running directory
cd "$(dirname "${BASH_SOURCE[0]}")" 

########################################################################
# Set variables
cellLine=("cellLine2")
PVALS=(0.0001 0.00001)
folderNamePeaks=("bigwig")
folderNamePeaksMacs=("macs_narrow")

########################################################################
# Directories and paths to file Inputs/Outputs

# Input files/dir
dataDir="./data"
BWDir="${dataDir}/CnR/${folderNamePeaks}/"
BWDirMacs="${dataDir}/CnR/${folderNamePeaksMacs}"
EnhancersDir="${dataDir}/ChIPseq/super_enhancers"

# Create dir
RESULTS="results"
mkdir -p ./${RESULTS}
mkdir -p ./${RESULTS}/01-enhancers
mkdir -p ./${RESULTS}/01-enhancers/${cellLine}

mkdir -p ./${RESULTS}/02-macs-narrow
mkdir -p ./${RESULTS}/02-macs-narrow/${cellLine}
mkdir -p ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2

mkdir -p ./${RESULTS}/03-computeMatrix
mkdir -p ./${RESULTS}/03-computeMatrix/${cellLine}


########################################################################
# Pre-processing data
# Create array of antibodies of interest per cell line
arr=($(cat ./input/samples-all.txt | grep -i ${cellLine}))


########################################################################
# We will use the peak files as generated by `macs_narrow`
MACS=("${arr[@]/#/${BWDirMacs}/}")

# We will sort and merge peaks from all samples together
cat "${MACS[@]/%/.macs2_peaks.narrowPeak}" | sort -k1,1 -k2,2n | bedtools merge -i stdin > ./${RESULTS}/02-macs-narrow/${cellLine}/macs2-peaks-merged.bed

########################################################################
# Filtering with various p-val thresholds, as the signal across the antibodies varies 
# and I think different thresholds will be needed for each
for i in "${!MACS[@]}"; 
    do
    for p in "${PVALS[@]}"; 
    do
    # Calc -log10(pval) and filter by pval
    awk -v p=$p '$7 > -(log(p)/log(10))' ${MACS[i]}.macs2_peaks.narrowPeak | sort -k1,1 -k2,2n > ./${RESULTS}/02-macs-narrow/${cellLine}/${arr[i]}-macs2-peaks-pvalfilt-${p}.bed

    # Compress and index
    bgzip -k ./${RESULTS}/02-macs-narrow/${cellLine}/${arr[i]}-macs2-peaks-pvalfilt-${p}.bed
    tabix -p bed ./${RESULTS}/02-macs-narrow/${cellLine}/${arr[i]}-macs2-peaks-pvalfilt-${p}.bed.gz
    done
done


################################################################################################################################################
# We will split the peaks by promoter, "typical" enhancers, super enhancers, and other peaks
# First, we will split the `super_enhancers` file with the peaks for the cell line
# because it contains both super and typical enhancers
cp ${EnhancersDir}/*${cellLine}_*.full.bed ./${RESULTS}/01-enhancers/${cellLine}


for f in ./${RESULTS}/01-enhancers/${cellLine}/*${cellLine}_*.full.bed; 
    do 
    awk -F'\t' 'NR==1 {header=$0; fname=FILENAME; sub(/\.bed$/, "", fname); print header > fname ".Super.bed"; print header > fname ".Typical.bed"} NR>1 {if ($NF == "1") print $0 >> fname ".Super.bed"; else if ($NF == "0") print $0 >> fname ".Typical.bed"}' "$f"; 
done


#############################################################

# Merge all TFs/marks into one file
# and break them up into different regions
for p in "${PVALS[@]}"; 
    do
    cat ./${RESULTS}/02-macs-narrow/${cellLine}/*-macs2-peaks-pvalfilt-${p}.bed | sort -k1,1 -k2,2n | cut -f1-3 | bedtools merge -i stdin > ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-merged-pvalfilt-${p}.bed
    
    # Break up the regions into promoter, "typical" enhancers, super enhancers, and other peaks. Note that some of these may overlap.
    bedtools intersect -a ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-merged-pvalfilt-${p}.bed \
    -b "${MACS[0]}".macs2_peaks.narrowPeak -wa > ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-h3k4me3overlap-merged-pvalfilt-${p}.bed

    bedtools intersect -a ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-merged-pvalfilt-${p}.bed \
    -b ./${RESULTS}/01-enhancers/${cellLine}/*.Super.bed -wa > ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-superenhancers-merged-pvalfilt-${p}.bed

    bedtools intersect -a ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-merged-pvalfilt-${p}.bed \
    -b ./${RESULTS}/01-enhancers/${cellLine}/*.Typical.bed -wa > ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-typicalenhancers-merged-pvalfilt-${p}.bed

    # Remove the "typical enhancers" that overlap H3K4me3 peaks as likely promoters.
    bedtools intersect -a ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-typicalenhancers-merged-pvalfilt-${p}.bed \
    -b ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-h3k4me3overlap-merged-pvalfilt-${p}.bed -v > ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-typicalenhancers-nopromoverlap-merged-pvalfilt-${p}.bed

    bedtools intersect -a ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-merged-pvalfilt-${p}.bed \
    -b "${MACS[0]}".macs2_peaks.narrowPeak ./${RESULTS}/01-enhancers/${cellLine}/*.Super.bed ./${RESULTS}/01-enhancers/${cellLine}/*.Typical.bed -v > ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-other-merged-pvalfilt-${p}.bed

done


########################################################################
# Big wig files per sample
BWDirArray=("${arr[@]/#/$BWDir}")
echo "$BWDirArray"

# Run computeMatrix
for p in "${PVALS[@]}"; 
    do
    
    # Run `computeMatrix` function on all peaks together
    bsub -P baker -J computeMatrix-${cellLine}-${p} -B -N -n 8 -R "rusage[mem=4GB] span[hosts=1]" -M 2GB -q standard \
                  computeMatrix reference-point -S ${BWDirArray[@]/%/.bigWig} \
                                                -R ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-merged-pvalfilt-${p}.bed \
                                                -o ./${RESULTS}/03-computeMatrix/${cellLine}/macs2-peaks-merged-pvalfilt-${p}-10kb.matrix.gz \
                                                --referencePoint center \
                                                -a 5000 -b 5000 \
                                                -p 8 \
                                                --samplesLabel H3K4me3_AB12 SAMPLE1-AB2_R1 SAMPLE2-AB1_R1 SAMPLE3-AB1_R1 SAMPLE4-AB1_R1 SAMPLE5-AB1_R1 SAMPLE6-AB1_R1 \
                                                --missingDataAsZero;
                                                
    # Run `computeMatrix` function on promoter, "typical" enhancers, super enhancers, and other peaks.
    bsub -P baker -J computeMatrix-${cellLine}-${p}-SPLIT -B -N -n 8 -R "rusage[mem=4GB] span[hosts=1]" -M 2GB -q standard \
                  computeMatrix reference-point -S ${BWDirArray[@]/%/.bigWig} \
                                                -R ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-h3k4me3overlap-merged-pvalfilt-${p}.bed \
                                                    ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-superenhancers-merged-pvalfilt-${p}.bed \
                                                    ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-typicalenhancers-nopromoverlap-merged-pvalfilt-${p}.bed \
                                                    ./${RESULTS}/02-macs-narrow/${cellLine}/filtered-macs2/macs2-peaks-other-merged-pvalfilt-${p}.bed \
                                                -o ./${RESULTS}/03-computeMatrix/${cellLine}/macs2-peaks-grouped-merged-pvalfilt-${p}-10kb.matrix.gz \
                                                --referencePoint center \
                                                -a 5000 -b 5000 \
                                                -p 8 \
                                                --samplesLabel H3K4me3_AB12 SAMPLE1-AB2_R1 SAMPLE2-AB1_R1 SAMPLE3-AB1_R1 SAMPLE4-AB1_R1 SAMPLE5-AB1_R1 SAMPLE6-AB1_R1 \
                                                --missingDataAsZero;
            
done

